#include<stdio.h>
#include<stdlib.h>

struct queue{
    int size;
    int front;
    int rear;
    int *arr;
};

int isFull(struct queue *q){
    if(q->rear == q->size - 1){
        return 1;
    }
    return 0;
}

int isEmpty(struct queue *q){
    if(q->rear == q->front){
        return 1;
    }
    return 0;
}

void enqueue(struct queue *q, int val){
    if(isFull(q)){
        printf("The Queue is full.Can't enqueue %d\n",val);
    }else{
        q->rear++;
        q->arr[q->rear] = val;
        printf("Enqueued element: %d\n", val);
    }
}

int dequeue(struct queue *q){
    int a = -1;
    if(isEmpty(q)){
        printf("This Queue is empty\n");
    }else{
        q->front++;
        a = q->arr[q->front]; 
    }
    return a;
}

int main(){
    struct queue *q = (struct queue*)malloc(sizeof(struct queue));
    q->size = 4;
    q->front = q->rear = 0;
    q->arr = (int*) malloc(q->size * sizeof(int));
    enqueue(q, 12);
    enqueue(q, 15);
    enqueue(q, 1); 
    enqueue(q, 100); 
   
    printf("Dequeuing element %d\n", dequeue(q));
    printf("Dequeuing element %d\n", dequeue(q));
    printf("Dequeuing element %d\n", dequeue(q)); 
    printf("Dequeuing element %d\n", dequeue(q));

    free(q->arr);
    free(q);

    return 0;
}
